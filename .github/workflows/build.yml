name: 8605

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: smallville7123

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    # manual trigger
  #schedule:
  #  - cron: '0 0 * * *' # https://crontab.guru

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      - name: Check version
        shell: bash
        run: |
          if [ ${{ github.event_name }} = 'pull_request' ]; then
            if wget --no-verbose https://github.com/ZLangJIT/6502/releases/download/version-PR/version
              then
                printf "$(( $(cat version) + 1 ))" > version
              else
                printf "1" > version
            fi
          else
            if wget --no-verbose https://github.com/ZLangJIT/6502/releases/download/version/version
              then
                printf "$(( $(cat version) + 1 ))" > version
              else
                printf "1" > version
            fi
          fi
          echo "HAVE_VERSION=$(cat version)" | tee -a $GITHUB_ENV

      - name: Fetch commit sha
        id: fetch_commit_sha
        run: |
          if [ ${{ github.event_name }} = 'pull_request' ]; then
            echo "sha=${{ github.event.pull_request.head.sha }}" | tee -a $GITHUB_OUTPUT
            echo "RELEASE_TAG=$(cat version) - PR" | tee -a $GITHUB_ENV
            echo "VERSION_TAG=version-PR" | tee -a $GITHUB_ENV
          else
            echo "sha=${{ github.sha }}" | tee -a $GITHUB_OUTPUT
            echo "RELEASE_TAG=$(cat version)" | tee -a $GITHUB_ENV
            echo "VERSION_TAG=version" | tee -a $GITHUB_ENV
          fi

      - name: Update gradle project info
        run: |
          cd apk
          printf '%s\n' ",s@GRADLE_VERSION_CODE@${{ env.HAVE_VERSION }}@g" w q | ed buildSrc/src/main/kotlin/ProjectSetting.kt
          if [ ${{ github.event_name }} = 'pull_request' ]; then
            printf '%s\n' ",s@GRADLE_VERSION_STRING@version ${{ env.RELEASE_TAG }} - https://github.com/ZLangJIT/6502/commits/${{ github.event.pull_request.head.sha }}@g" w q | ed buildSrc/src/main/kotlin/ProjectSetting.kt
          else
            printf '%s\n' ",s@GRADLE_VERSION_STRING@version ${{ env.RELEASE_TAG }} - https://github.com/ZLangJIT/6502/commits/${{ github.sha }}@g" w q | ed buildSrc/src/main/kotlin/ProjectSetting.kt
          fi

          cat buildSrc/src/main/kotlin/ProjectSetting.kt

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Check keystore
        shell: bash
        run: |
          cd apk/app
          if wget --no-verbose https://github.com/ZLangJIT/6502/releases/download/keystore/keystore
            then
              echo "HAVE_KEYSTORE=1" | tee -a $GITHUB_ENV
            else
              echo "HAVE_KEYSTORE=" | tee -a $GITHUB_ENV
          fi

      - name: Create keystore
        if: ${{ env.HAVE_KEYSTORE == '' }}
        shell: bash
        run: |
          cd apk/app
          printf "123456\n123456\nUnknown1\nUnknown2\nUnknown3\nUnknown4\nUnknown5\nUnknown6\nyes\n123456\n123456" | keytool -genkey -v -keystore keystore -alias keystore -keyalg RSA -keysize 2048 -validity 10000

      - name: Release keystore
        if: ${{ env.HAVE_KEYSTORE == '' }}
        uses: softprops/action-gh-release@master
        with:
          name:  keystore
          tag_name:  keystore
          body: |
            keystore
          files: |
            apk/app/keystore
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true

      - name: Change wrapper permissions
        run: chmod +x ./apk/gradlew

      - name: Build gradle project
        run: |
          cd apk

          # info shows cmake output but also tons of Transforming Artifact output
          if ./gradlew build --info
              then
                  echo "GRADLE_RETURN_CODE=0" | tee -a $GITHUB_ENV
              else
                  echo "GRADLE_RETURN_CODE=1" | tee -a $GITHUB_ENV
          fi

      - name: APK build failed - print last 600 lines from cmake [apk]
        if: ${{ env.GRADLE_RETURN_CODE == '1' }}
        shell: bash
        run: |
          echo "printing the last 600 lines from app/.../cmake_server_log.txt"
          tail -n 600 apk/app/.cxx/cmake/debug/arm64-v8a/cmake_server_log.txt
          false

      # Create APK Debug
      - name: Build apk debug project (APK) - ${{ env.main_project_module }} module
        run: cd apk ; ./gradlew assembleDebug

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: cd apk ; ./gradlew assemble

      # Create Bundle AAB Release
      # Noted for main module build [main_project_module]:bundleRelease
      - name: Build app bundle release (AAB) - ${{ env.main_project_module }} module
        run: cd apk ; ./gradlew ${{ env.main_project_module }}:bundleRelease

      - name: Move apk
        run: |
          ls -alh apk/app/build/outputs/*/*
          mv apk/app/build/outputs/apk/debug/github-action-automated-debug.apk 6502-debug.apk
          mv apk/app/build/outputs/apk/release/github-action-automated-release.apk 6502-release.apk
          mv apk/app/build/outputs/bundle/release/github-action-automated-release.aab 6502-release-bundle.aab
          sha256sum 6502-debug.apk > 6502-debug.apk.sha256
          sha256sum 6502-release.apk > 6502-release.apk.sha256
          sha256sum 6502-release-bundle.aab > 6502-release-bundle.aab.sha256

      - name: Release
        uses: softprops/action-gh-release@master
        with:
          name: ${{ env.RELEASE_TAG }}
          tag_name: ${{ env.RELEASE_TAG }}
          draft: ${{ github.event_name == 'pull_request' }}
          target_commitish: ${{ steps.fetch_commit_sha.outputs.sha }}
          body: |
            apk

            * aarch64 apk files (debug+release)
            * aarch64 aab files (bundle)
          files: |
            6502-debug.apk
            6502-debug.apk.sha256
            6502-release.apk
            6502-release.apk.sha256
            6502-release-bundle.aab
            6502-release-bundle.aab.sha256
          token: ${{ secrets.GITHUB_TOKEN }}
          # generate_release_notes: true
          fail_on_unmatched_files: true

      - name: Release
        uses: softprops/action-gh-release@master
        with:
          name:  ${{ env.VERSION_TAG }}
          tag_name:  ${{ env.VERSION_TAG }}
          draft: ${{ github.event_name == 'pull_request' }}
          target_commitish: ${{ steps.fetch_commit_sha.outputs.sha }}
          body: |
            version
          files: |
            version
          token: ${{ secrets.GITHUB_TOKEN }}
          # generate_release_notes: true
          fail_on_unmatched_files: true
